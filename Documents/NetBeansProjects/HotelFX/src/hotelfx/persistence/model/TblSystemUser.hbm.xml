<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Apr 4, 2018 1:26:01 PM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="hotelfx.persistence.model.TblSystemUser" table="tblSystemUser" schema="dbo" catalog="Hotel" optimistic-lock="version">
        <id name="iduser" type="long">
            <column name="IDUser" />
            <generator class="identity" />
        </id>
        <many-to-one name="refRecordStatus" class="hotelfx.persistence.model.RefRecordStatus" fetch="select">
            <column name="_RecordStatus" />
        </many-to-one>
        <many-to-one name="refSystemUserLockStatus" class="hotelfx.persistence.model.RefSystemUserLockStatus" fetch="select">
            <column name="_LockStatus" />
        </many-to-one>
        <many-to-one name="refSystemUserLoginStatus" class="hotelfx.persistence.model.RefSystemUserLoginStatus" fetch="select">
            <column name="_LoginStatus" />
        </many-to-one>
        <many-to-one name="tblEmployeeByCreateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="CreateBy" />
        </many-to-one>
        <many-to-one name="tblEmployeeByIdemployee" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="IDEmployee" />
        </many-to-one>
        <many-to-one name="tblEmployeeByLastUpdateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="LastUpdateBy" />
        </many-to-one>
        <many-to-one name="tblSystemRole" class="hotelfx.persistence.model.TblSystemRole" fetch="select">
            <column name="IDRole" />
        </many-to-one>
        <property name="codeUser" type="string">
            <column name="CodeUser" length="50" />
        </property>
        <property name="userPassword" type="string">
            <column name="UserPassword" length="50" />
        </property>
        <property name="userUrlImage" type="string">
            <column name="UserUrlImage" />
        </property>
        <property name="userGuid" type="string">
            <column name="UserGUID" length="36" />
        </property>
        <property name="createDate" type="timestamp">
            <column name="CreateDate" length="23" />
        </property>
        <property name="lastUpdateDate" type="timestamp">
            <column name="LastUpdateDate" length="23" />
        </property>
        <set name="logSystems" table="logSystem" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDUser" />
            </key>
            <one-to-many class="hotelfx.persistence.model.LogSystem" />
        </set>
        <set name="tblSystemLogBooks" table="tblSystemLogBook" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDUser" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblSystemLogBook" />
        </set>
    </class>
    <query name="findAllTblSystemUser">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblSystemUser t where (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
    <query name="findTblSystemUserByUsernamePassword">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblSystemUser t where t.codeUser=:codeUser and t.userPassword=:userPassword and (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3 or t.refRecordStatus.idstatus=5)]]>
    </query>
    <query name="findAllTblSystemUserByCodeUser">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblSystemUser t where t.codeUser=:codeUser and (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3 or t.refRecordStatus.idstatus=5)]]>
    </query>
    <sql-query name="updateTblSystemUserToLogin" callable="true">
        <return-scalar column="err_msg" type="string"/>
        <![CDATA[{CALL UpdateSystemUserToLogin(:idUser)}]]>
    </sql-query>
    <sql-query name="updateTblSystemUserToLogout" callable="true">
        <return-scalar column="err_msg" type="string"/>
        <![CDATA[{CALL UpdateSystemUserToLogout(:idUser)}]]>
    </sql-query>
</hibernate-mapping>

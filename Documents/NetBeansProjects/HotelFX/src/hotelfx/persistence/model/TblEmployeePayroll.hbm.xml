<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Aug 21, 2017 1:49:37 PM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="hotelfx.persistence.model.TblEmployeePayroll" table="tblEmployeePayroll" schema="dbo" catalog="Hotel" optimistic-lock="version">
        <id name="idpayroll" type="long">
            <column name="IDPayroll" />
            <generator class="identity" />
        </id>
        <many-to-one name="refEmployeePayrollType" class="hotelfx.persistence.model.RefEmployeePayrollType" fetch="select">
            <column name="_PayrollType" />
        </many-to-one>
        <many-to-one name="refRecordStatus" class="hotelfx.persistence.model.RefRecordStatus" fetch="select">
            <column name="_RecordStatus" />
        </many-to-one>
        <many-to-one name="tblEmployeeByCreateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="CreateBy" />
        </many-to-one>
        <many-to-one name="tblEmployeeByLastUpdateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="LastUpdateBy" />
        </many-to-one>
        <many-to-one name="tblFinanceData" class="hotelfx.persistence.model.TblFinanceData" fetch="select">
            <column name="IDFinanceData" />
        </many-to-one>
        <property name="codePayroll" type="string">
            <column name="CodePayroll" length="50" />
        </property>
        <property name="payrollMonth" type="date">
            <column name="PayrollMonth" />
        </property>
        <property name="beginPeriode" type="timestamp">
            <column name="BeginPeriode" length="23" />
        </property>
        <property name="endPeriode" type="timestamp">
            <column name="EndPeriode" length="23" />
        </property>
        <property name="roundValue" type="java.lang.Long">
            <column name="RoundValue" precision="18" scale="0" />
        </property>
        <property name="payrollDateCreated" type="timestamp">
            <column name="PayrollDateCreated" length="23" />
        </property>
        <property name="payrollNote" type="string">
            <column name="PayrollNote" />
        </property>
        <property name="createDate" type="timestamp">
            <column name="CreateDate" length="23" />
        </property>
        <property name="lastUpdateDate" type="timestamp">
            <column name="LastUpdateDate" length="23" />
        </property>
        <set name="tblEmployeeEmployeePayrolls" table="tblEmployee_EmployeePayroll" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDPayroll" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblEmployeeEmployeePayroll" />
        </set>
        <set name="tblEmployeeResigns" table="tblEmployeeResign" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDPayroll" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblEmployeeResign" />
        </set>
    </class>
    <query name="findAllTblEmployeePayroll">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblEmployeePayroll t where (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
</hibernate-mapping>

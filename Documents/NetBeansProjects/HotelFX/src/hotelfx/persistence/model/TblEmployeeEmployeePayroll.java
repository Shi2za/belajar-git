package hotelfx.persistence.model;
// Generated Aug 21, 2017 1:49:32 PM by Hibernate Tools 4.3.1

import java.util.Date;

import javafx.beans.property.IntegerProperty;
import javafx.beans.property.LongProperty;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleLongProperty;
import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;

/**
 * TblEmployeeEmployeePayroll generated by hbm2java
 */
public class TblEmployeeEmployeePayroll implements java.io.Serializable {

    private final LongProperty idrelation;
    private final ObjectProperty<RefRecordStatus> refRecordStatus;
    private final ObjectProperty<TblEmployee> tblEmployeeByIdemployee;
    private final ObjectProperty<TblEmployee> tblEmployeeByCreateBy;
    private final ObjectProperty<TblEmployee> tblEmployeeByLastUpdateBy;
    private final ObjectProperty<TblEmployeePayroll> tblEmployeePayroll;
    private final LongProperty basicSalary;
    private final LongProperty basicAllowance;
    private final LongProperty overtimeGet;
    private final LongProperty anotherAllowance;
    private final StringProperty allowanceNote;
    private final LongProperty monthlyPayment;
    private final LongProperty absentCut;
    private final LongProperty lateCut;
    private final LongProperty taxPayment;
    private final LongProperty insurancePayment;
    private final LongProperty anotherPayment;
    private final StringProperty paymentNote;
    private final IntegerProperty absentCount;
    private final IntegerProperty leaveCount;
    private final IntegerProperty overtimeCount;
    private final IntegerProperty regularCount;
    private final IntegerProperty lateCount;
    private final StringProperty bankAccount;
    private final StringProperty detailNote;
    private final ObjectProperty<Date> createDate;
    private final ObjectProperty<Date> lastUpdateDate;

    public TblEmployeeEmployeePayroll() {
        this.idrelation = new SimpleLongProperty();
        this.refRecordStatus = new SimpleObjectProperty<>();
        this.tblEmployeeByIdemployee = new SimpleObjectProperty<>();
        this.tblEmployeeByCreateBy = new SimpleObjectProperty<>();
        this.tblEmployeeByLastUpdateBy = new SimpleObjectProperty<>();
        this.tblEmployeePayroll = new SimpleObjectProperty<>();
        this.basicSalary = new SimpleLongProperty();
        this.basicAllowance = new SimpleLongProperty();
        this.overtimeGet = new SimpleLongProperty();
        this.anotherAllowance = new SimpleLongProperty();
        this.allowanceNote = new SimpleStringProperty();
        this.monthlyPayment = new SimpleLongProperty();
        this.absentCut = new SimpleLongProperty();
        this.lateCut = new SimpleLongProperty();
        this.taxPayment = new SimpleLongProperty();
        this.insurancePayment = new SimpleLongProperty();
        this.anotherPayment = new SimpleLongProperty();
        this.paymentNote = new SimpleStringProperty();
        this.absentCount = new SimpleIntegerProperty();
        this.leaveCount = new SimpleIntegerProperty();
        this.overtimeCount = new SimpleIntegerProperty();
        this.regularCount = new SimpleIntegerProperty();
        this.lateCount = new SimpleIntegerProperty();
        this.bankAccount = new SimpleStringProperty();
        this.detailNote = new SimpleStringProperty();
        this.createDate = new SimpleObjectProperty<>();
        this.lastUpdateDate = new SimpleObjectProperty<>();

    }

    public TblEmployeeEmployeePayroll(long idrelation) {
        this();
        idrelationProperty().set(idrelation);
    }

    public TblEmployeeEmployeePayroll(long idrelation, RefRecordStatus refRecordStatus, TblEmployee tblEmployeeByIdemployee, TblEmployee tblEmployeeByCreateBy, TblEmployee tblEmployeeByLastUpdateBy, TblEmployeePayroll tblEmployeePayroll, Long basicSalary, Long basicAllowance, Long overtimeGet, Long anotherAllowance, String allowanceNote, Long monthlyPayment, Long absentCut, Long lateCut, Long taxPayment, Long insurancePayment, Long anotherPayment, String paymentNote, Integer absentCount, Integer leaveCount, Integer overtimeCount, Integer regularCount, Integer lateCount, String bankAccount, String detailNote, Date createDate, Date lastUpdateDate) {
        this();
        idrelationProperty().set(idrelation);
        refRecordStatusProperty().set(refRecordStatus);
        tblEmployeeByIdemployeeProperty().set(tblEmployeeByIdemployee);
        tblEmployeeByCreateByProperty().set(tblEmployeeByCreateBy);
        tblEmployeeByLastUpdateByProperty().set(tblEmployeeByLastUpdateBy);
        tblEmployeePayrollProperty().set(tblEmployeePayroll);
        basicSalaryProperty().set(basicSalary);
        basicAllowanceProperty().set(basicAllowance);
        overtimeGetProperty().set(overtimeGet);
        anotherAllowanceProperty().set(anotherAllowance);
        allowanceNoteProperty().set(allowanceNote);
        monthlyPaymentProperty().set(monthlyPayment);
        absentCutProperty().set(absentCut);
        lateCutProperty().set(lateCut);
        taxPaymentProperty().set(taxPayment);
        insurancePaymentProperty().set(insurancePayment);
        anotherPaymentProperty().set(anotherPayment);
        paymentNoteProperty().set(paymentNote);
        absentCountProperty().set(absentCount);
        leaveCountProperty().set(leaveCount);
        overtimeCountProperty().set(overtimeCount);
        regularCountProperty().set(regularCount);
        lateCountProperty().set(lateCount);
        bankAccountProperty().set(bankAccount);
        detailNoteProperty().set(detailNote);
        createDateProperty().set(createDate);
        lastUpdateDateProperty().set(lastUpdateDate);

    }

    public TblEmployeeEmployeePayroll(TblEmployeeEmployeePayroll tblEmployeeEmployeePayroll) {
        this();
        idrelationProperty().set(tblEmployeeEmployeePayroll.getIdrelation());
        refRecordStatusProperty().set(tblEmployeeEmployeePayroll.getRefRecordStatus());
        tblEmployeeByIdemployeeProperty().set(tblEmployeeEmployeePayroll.getTblEmployeeByIdemployee());
        tblEmployeeByCreateByProperty().set(tblEmployeeEmployeePayroll.getTblEmployeeByCreateBy());
        tblEmployeeByLastUpdateByProperty().set(tblEmployeeEmployeePayroll.getTblEmployeeByLastUpdateBy());
        tblEmployeePayrollProperty().set(tblEmployeeEmployeePayroll.getTblEmployeePayroll());
        basicSalaryProperty().set(tblEmployeeEmployeePayroll.getBasicSalary());
        basicAllowanceProperty().set(tblEmployeeEmployeePayroll.getBasicAllowance());
        overtimeGetProperty().set(tblEmployeeEmployeePayroll.getOvertimeGet());
        anotherAllowanceProperty().set(tblEmployeeEmployeePayroll.getAnotherAllowance());
        allowanceNoteProperty().set(tblEmployeeEmployeePayroll.getAllowanceNote());
        monthlyPaymentProperty().set(tblEmployeeEmployeePayroll.getMonthlyPayment());
        absentCutProperty().set(tblEmployeeEmployeePayroll.getAbsentCut());
        lateCutProperty().set(tblEmployeeEmployeePayroll.getLateCut());
        taxPaymentProperty().set(tblEmployeeEmployeePayroll.getTaxPayment());
        insurancePaymentProperty().set(tblEmployeeEmployeePayroll.getInsurancePayment());
        anotherPaymentProperty().set(tblEmployeeEmployeePayroll.getAnotherPayment());
        paymentNoteProperty().set(tblEmployeeEmployeePayroll.getPaymentNote());
        absentCountProperty().set(tblEmployeeEmployeePayroll.getAbsentCount());
        leaveCountProperty().set(tblEmployeeEmployeePayroll.getLeaveCount());
        overtimeCountProperty().set(tblEmployeeEmployeePayroll.getOvertimeCount());
        regularCountProperty().set(tblEmployeeEmployeePayroll.getRegularCount());
        lateCountProperty().set(tblEmployeeEmployeePayroll.getLateCount());
        bankAccountProperty().set(tblEmployeeEmployeePayroll.getBankAccount());
        detailNoteProperty().set(tblEmployeeEmployeePayroll.getDetailNote());
        createDateProperty().set(tblEmployeeEmployeePayroll.getCreateDate());
        lastUpdateDateProperty().set(tblEmployeeEmployeePayroll.getLastUpdateDate());

    }

    public final LongProperty idrelationProperty() {
        return this.idrelation;
    }

    public long getIdrelation() {
        return idrelationProperty().get();
    }

    public void setIdrelation(long idrelation) {
        idrelationProperty().set(idrelation);
    }

    public final ObjectProperty<RefRecordStatus> refRecordStatusProperty() {
        return this.refRecordStatus;
    }

    public RefRecordStatus getRefRecordStatus() {
        return refRecordStatusProperty().get();
    }

    public void setRefRecordStatus(RefRecordStatus refRecordStatus) {
        refRecordStatusProperty().set(refRecordStatus);
    }

    public final ObjectProperty<TblEmployee> tblEmployeeByIdemployeeProperty() {
        return this.tblEmployeeByIdemployee;
    }

    public TblEmployee getTblEmployeeByIdemployee() {
        return tblEmployeeByIdemployeeProperty().get();
    }

    public void setTblEmployeeByIdemployee(TblEmployee tblEmployeeByIdemployee) {
        tblEmployeeByIdemployeeProperty().set(tblEmployeeByIdemployee);
    }

    public final ObjectProperty<TblEmployee> tblEmployeeByCreateByProperty() {
        return this.tblEmployeeByCreateBy;
    }

    public TblEmployee getTblEmployeeByCreateBy() {
        return tblEmployeeByCreateByProperty().get();
    }

    public void setTblEmployeeByCreateBy(TblEmployee tblEmployeeByCreateBy) {
        tblEmployeeByCreateByProperty().set(tblEmployeeByCreateBy);
    }

    public final ObjectProperty<TblEmployee> tblEmployeeByLastUpdateByProperty() {
        return this.tblEmployeeByLastUpdateBy;
    }

    public TblEmployee getTblEmployeeByLastUpdateBy() {
        return tblEmployeeByLastUpdateByProperty().get();
    }

    public void setTblEmployeeByLastUpdateBy(TblEmployee tblEmployeeByLastUpdateBy) {
        tblEmployeeByLastUpdateByProperty().set(tblEmployeeByLastUpdateBy);
    }

    public final ObjectProperty<TblEmployeePayroll> tblEmployeePayrollProperty() {
        return this.tblEmployeePayroll;
    }

    public TblEmployeePayroll getTblEmployeePayroll() {
        return tblEmployeePayrollProperty().get();
    }

    public void setTblEmployeePayroll(TblEmployeePayroll tblEmployeePayroll) {
        tblEmployeePayrollProperty().set(tblEmployeePayroll);
    }

    public final LongProperty basicSalaryProperty() {
        return this.basicSalary;
    }

    public Long getBasicSalary() {
        return basicSalaryProperty().get();
    }

    public void setBasicSalary(Long basicSalary) {
        basicSalaryProperty().set(basicSalary);
    }

    public final LongProperty basicAllowanceProperty() {
        return this.basicAllowance;
    }

    public Long getBasicAllowance() {
        return basicAllowanceProperty().get();
    }

    public void setBasicAllowance(Long basicAllowance) {
        basicAllowanceProperty().set(basicAllowance);
    }

    public final LongProperty overtimeGetProperty() {
        return this.overtimeGet;
    }

    public Long getOvertimeGet() {
        return overtimeGetProperty().get();
    }

    public void setOvertimeGet(Long overtimeGet) {
        overtimeGetProperty().set(overtimeGet);
    }

    public final LongProperty anotherAllowanceProperty() {
        return this.anotherAllowance;
    }

    public Long getAnotherAllowance() {
        return anotherAllowanceProperty().get();
    }

    public void setAnotherAllowance(Long anotherAllowance) {
        anotherAllowanceProperty().set(anotherAllowance);
    }

    public final StringProperty allowanceNoteProperty() {
        return this.allowanceNote;
    }

    public String getAllowanceNote() {
        return allowanceNoteProperty().get();
    }

    public void setAllowanceNote(String allowanceNote) {
        allowanceNoteProperty().set(allowanceNote);
    }

    public final LongProperty monthlyPaymentProperty() {
        return this.monthlyPayment;
    }

    public Long getMonthlyPayment() {
        return monthlyPaymentProperty().get();
    }

    public void setMonthlyPayment(Long monthlyPayment) {
        monthlyPaymentProperty().set(monthlyPayment);
    }

    public final LongProperty absentCutProperty() {
        return this.absentCut;
    }

    public Long getAbsentCut() {
        return absentCutProperty().get();
    }

    public void setAbsentCut(Long absentCut) {
        absentCutProperty().set(absentCut);
    }

    public final LongProperty lateCutProperty() {
        return this.lateCut;
    }

    public Long getLateCut() {
        return lateCutProperty().get();
    }

    public void setLateCut(Long lateCut) {
        lateCutProperty().set(lateCut);
    }

    public final LongProperty taxPaymentProperty() {
        return this.taxPayment;
    }

    public Long getTaxPayment() {
        return taxPaymentProperty().get();
    }

    public void setTaxPayment(Long taxPayment) {
        taxPaymentProperty().set(taxPayment);
    }

    public final LongProperty insurancePaymentProperty() {
        return this.insurancePayment;
    }

    public Long getInsurancePayment() {
        return insurancePaymentProperty().get();
    }

    public void setInsurancePayment(Long insurancePayment) {
        insurancePaymentProperty().set(insurancePayment);
    }

    public final LongProperty anotherPaymentProperty() {
        return this.anotherPayment;
    }

    public Long getAnotherPayment() {
        return anotherPaymentProperty().get();
    }

    public void setAnotherPayment(Long anotherPayment) {
        anotherPaymentProperty().set(anotherPayment);
    }

    public final StringProperty paymentNoteProperty() {
        return this.paymentNote;
    }

    public String getPaymentNote() {
        return paymentNoteProperty().get();
    }

    public void setPaymentNote(String paymentNote) {
        paymentNoteProperty().set(paymentNote);
    }

    public final IntegerProperty absentCountProperty() {
        return this.absentCount;
    }

    public Integer getAbsentCount() {
        return absentCountProperty().get();
    }

    public void setAbsentCount(Integer absentCount) {
        absentCountProperty().set(absentCount);
    }

    public final IntegerProperty leaveCountProperty() {
        return this.leaveCount;
    }

    public Integer getLeaveCount() {
        return leaveCountProperty().get();
    }

    public void setLeaveCount(Integer leaveCount) {
        leaveCountProperty().set(leaveCount);
    }

    public final IntegerProperty overtimeCountProperty() {
        return this.overtimeCount;
    }

    public Integer getOvertimeCount() {
        return overtimeCountProperty().get();
    }

    public void setOvertimeCount(Integer overtimeCount) {
        overtimeCountProperty().set(overtimeCount);
    }

    public final IntegerProperty regularCountProperty() {
        return this.regularCount;
    }

    public Integer getRegularCount() {
        return regularCountProperty().get();
    }

    public void setRegularCount(Integer regularCount) {
        regularCountProperty().set(regularCount);
    }

    public final IntegerProperty lateCountProperty() {
        return this.lateCount;
    }

    public Integer getLateCount() {
        return lateCountProperty().get();
    }

    public void setLateCount(Integer lateCount) {
        lateCountProperty().set(lateCount);
    }

    public final StringProperty bankAccountProperty() {
        return this.bankAccount;
    }

    public String getBankAccount() {
        return bankAccountProperty().get();
    }

    public void setBankAccount(String bankAccount) {
        bankAccountProperty().set(bankAccount);
    }

    public final StringProperty detailNoteProperty() {
        return this.detailNote;
    }

    public String getDetailNote() {
        return detailNoteProperty().get();
    }

    public void setDetailNote(String detailNote) {
        detailNoteProperty().set(detailNote);
    }

    public final ObjectProperty<Date> createDateProperty() {
        return this.createDate;
    }

    public Date getCreateDate() {
        return createDateProperty().get();
    }

    public void setCreateDate(Date createDate) {
        createDateProperty().set(createDate);
    }

    public final ObjectProperty<Date> lastUpdateDateProperty() {
        return this.lastUpdateDate;
    }

    public Date getLastUpdateDate() {
        return lastUpdateDateProperty().get();
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        lastUpdateDateProperty().set(lastUpdateDate);
    }

}

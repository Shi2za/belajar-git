<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Mar 7, 2018 10:53:27 AM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="hotelfx.persistence.model.TblFinanceData" table="tblFinanceData" schema="dbo" catalog="Hotel" optimistic-lock="version">
        <id name="iddata" type="long">
            <column name="IDData" />
            <generator class="identity" />
        </id>
        <many-to-one name="refFinanceDataType" class="hotelfx.persistence.model.RefFinanceDataType" fetch="select">
            <column name="_DataType" />
        </many-to-one>
        <many-to-one name="refRecordStatus" class="hotelfx.persistence.model.RefRecordStatus" fetch="select">
            <column name="_RecordStatus" />
        </many-to-one>
        <many-to-one name="tblEmployeeByLastUpdateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="LastUpdateBy" />
        </many-to-one>
        <many-to-one name="tblEmployeeByCreateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="CreateBy" />
        </many-to-one>
        <property name="codeData" type="string">
            <column name="CodeData" length="50" />
        </property>
        <property name="dataNote" type="string">
            <column name="DataNote" />
        </property>
        <property name="createDate" type="timestamp">
            <column name="CreateDate" length="23" />
        </property>
        <property name="lastUpdateDate" type="timestamp">
            <column name="LastUpdateDate" length="23" />
        </property>
        <set name="tblPurchaseOrders" table="tblPurchaseOrder" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblPurchaseOrder" />
        </set>
        <set name="tblReservationPayments" table="tblReservationPayment" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblReservationPayment" />
        </set>
        <set name="tblEmployeeServiceCharges" table="tblEmployeeServiceCharge" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblEmployeeServiceCharge" />
        </set>
        <set name="tblFinanceTransactions" table="tblFinanceTransaction" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblFinanceTransaction" />
        </set>
        <set name="tblEmployeeResigns" table="tblEmployeeResign" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblEmployeeResign" />
        </set>
        <set name="tblReturs" table="tblRetur" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblRetur" />
        </set>
        <set name="tblEmployeeThrs" table="tblEmployeeTHR" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblEmployeeThr" />
        </set>
        <set name="tblEmployeeCutOffLeaves" table="tblEmployeeCutOffLeave" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblEmployeeCutOffLeave" />
        </set>
        <set name="tblEmployeePayrolls" table="tblEmployeePayroll" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblEmployeePayroll" />
        </set>
        <set name="tblMemorandumInvoices" table="tblMemorandumInvoice" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDFinanceData" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblMemorandumInvoice" />
        </set>
    </class>
    <query name="findAllTblFinanceData">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblFinanceData t where (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
</hibernate-mapping>

<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated May 15, 2018 12:47:57 PM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="hotelfx.persistence.model.TblReservationBrokenItem" table="tblReservationBrokenItem" schema="dbo" catalog="Hotel" optimistic-lock="version">
        <id name="idbroken" type="long">
            <column name="IDBroken" />
            <generator class="identity" />
        </id>
        <many-to-one name="refEndOfDayDataStatus" class="hotelfx.persistence.model.RefEndOfDayDataStatus" fetch="select">
            <column name="_EoDDataStatus" />
        </many-to-one>
        <many-to-one name="refRecordStatus" class="hotelfx.persistence.model.RefRecordStatus" fetch="select">
            <column name="_RecordStatus" />
        </many-to-one>
        <many-to-one name="tblEmployeeByLastUpdateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="LastUpdateBy" />
        </many-to-one>
        <many-to-one name="tblEmployeeByCreateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="CreateBy" />
        </many-to-one>
        <many-to-one name="tblItem" class="hotelfx.persistence.model.TblItem" fetch="select">
            <column name="IDItem" />
        </many-to-one>
        <many-to-one name="tblReservationRoomTypeDetail" class="hotelfx.persistence.model.TblReservationRoomTypeDetail" fetch="select">
            <column name="IDRoomTypeDetail" />
        </many-to-one>
        <property name="itemCharge" type="big_decimal">
            <column name="ItemCharge" precision="18" scale="4" />
        </property>
        <property name="itemQuantity" type="big_decimal">
            <column name="ItemQuantity" precision="10" scale="4" />
        </property>
        <property name="createDate" type="timestamp">
            <column name="CreateDate" length="23" />
        </property>
        <property name="lastUpdateDate" type="timestamp">
            <column name="LastUpdateDate" length="23" />
        </property>
        <set name="tblReservationBrokenItemPropertyBarcodes" table="tblReservationBrokenItem_PropertyBarcode" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="IDBrokenItem" />
            </key>
            <one-to-many class="hotelfx.persistence.model.TblReservationBrokenItemPropertyBarcode" />
        </set>
    </class>
    <query name="findAllTblReservationBrokenItemByIDReservationRoomTypeDetail">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblReservationBrokenItem t where t.tblReservationRoomTypeDetail.iddetail=:idReservationRoomTypeDetail and (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
    <query name="findAllTblReservationBrokenItemByCreateDate">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblReservationBrokenItem t where t.createDate=:createDate and (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
    <query name="findAllTblReservationBrokenItem">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblReservationBrokenItem t where (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
</hibernate-mapping>

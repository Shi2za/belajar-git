<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Jan 29, 2018 9:24:46 AM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="hotelfx.persistence.model.SysPasswordDeleteDebt" table="sysPasswordDeleteDebt" schema="dbo" catalog="Hotel" optimistic-lock="version">
        <id name="idpasswordDeleteDebt" type="long">
            <column name="IDPasswordDeleteDebt" />
            <generator class="identity" />
        </id>
        <many-to-one name="refRecordStatus" class="hotelfx.persistence.model.RefRecordStatus" fetch="select">
            <column name="_RecordStatus" />
        </many-to-one>
        <many-to-one name="tblEmployeeByCreatedBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="CreatedBy" />
        </many-to-one>
        <many-to-one name="tblEmployeeByLastUpdatedBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="LastUpdatedBy" />
        </many-to-one>
        <property name="passwordName" type="string">
            <column name="PasswordName" length="50" />
        </property>
        <property name="passwordValue" type="string">
            <column name="PasswordValue" length="50" />
        </property>
        <property name="createdDate" type="timestamp">
            <column name="CreatedDate" length="23" />
        </property>
        <property name="lastUpdatedDate" type="timestamp">
            <column name="LastUpdatedDate" length="23" />
        </property>
    </class>
    <query name="findAllSysPasswordDeleteDebtByPassword">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from SysPasswordDeleteDebt t where t.passwordName='password_hapus_hutang' and t.passwordValue=:passwordValue and (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
    
    <sql-query name="checkOldPassword">
        <return-scalar column="errMessage" type="string"/>
          <![CDATA[{CALL CheckOldPassword(:password)}]]>
    </sql-query>
</hibernate-mapping>

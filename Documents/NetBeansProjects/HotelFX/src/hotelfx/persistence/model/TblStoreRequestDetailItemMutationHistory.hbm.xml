<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Sep 26, 2018 4:52:06 PM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="hotelfx.persistence.model.TblStoreRequestDetailItemMutationHistory" table="tblStoreRequestDetail_ItemMutationHistory" schema="dbo" catalog="Hotel"
    optimistic-lock="version">
        <id name="idrelation" type="long">
            <column name="IDRelation" />
            <generator class="identity" />
        </id>
        <many-to-one name="refRecordStatus" class="hotelfx.persistence.model.RefRecordStatus" fetch="select">
            <column name="_RecordStatus" />
        </many-to-one>
        <many-to-one name="tblEmployeeByLastUpdateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="LastUpdateBy" />
        </many-to-one>
        <many-to-one name="tblEmployeeByCreateBy" class="hotelfx.persistence.model.TblEmployee" fetch="select">
            <column name="CreateBy" />
        </many-to-one>
        <many-to-one name="tblItemMutationHistory" class="hotelfx.persistence.model.TblItemMutationHistory" fetch="select">
            <column name="IDMutation" />
        </many-to-one>
        <many-to-one name="tblStoreRequestDetail" class="hotelfx.persistence.model.TblStoreRequestDetail" fetch="select">
            <column name="IDStoreRequestDetail" />
        </many-to-one>
        <property name="createDate" type="timestamp">
            <column name="CreateDate" length="23" />
        </property>
        <property name="lastUpdateDate" type="timestamp">
            <column name="LastUpdateDate" length="23" />
        </property>
    </class>
    <query name="findAllTblStoreRequestDetailItemMutationHistoryByIDStoreRequestDetail">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblStoreRequestDetailItemMutationHistory t where t.tblStoreRequestDetail.iddetail=:idStoreRequestDetail and (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
    <query name="findAllTblStoreRequestDetailItemMutationHistory">
        <!--<![CDATA[CALL GetStocks(:stockCode)]]>-->
        <![CDATA[from TblStoreRequestDetailItemMutationHistory t where (t.refRecordStatus.idstatus=1 or t.refRecordStatus.idstatus=3)]]>
    </query>
</hibernate-mapping>
